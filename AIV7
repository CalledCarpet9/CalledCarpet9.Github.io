from openai import OpenAI # Gives access to ChatGPT API
import json
import requests 
import os
import pygame 

# API Keys
GPT_key = "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"
IX_key = "sk_afa705b35f8787b389f9872d12df895affdc300bb48cebfe"
DID_key = "ZGFtaWVuZG9vbGV5MTIxMUBvdXRsb29rLmNvbQ:ruH7tzcr5DjALw-7_zxKi"


client = OpenAI(api_key=GPT_key)  
current_dir = os.getcwd()
def chat_gpt(prompt):
    '''Sends prompt to ChatGPT API to process, and returns the response.'''
    response = client.chat.completions.create(
        model="gpt-4",
        messages=[
            {"role": "system", "content": "You are a helpful voice assistant."},
            {"role": "user", "content": prompt}
        ]
    )
    return response.choices[0].message.content.strip()

def generate_audio(text):
    '''Generates audio based on an input text using ElevenLabs AI.'''
    url = "https://api.elevenlabs.io/v1/text-to-speech/onwK4e9ZLuTAKqWW03F9" 
    headers = {
        "accept": "audio/mpeg",
        "xi-api-key": IX_key,  # Use environment variable
        "Content-Type": "application/json"
    }
    
    data = {
        "text": text,
        "model_id": "eleven_multilingual_v2",
        "voice_settings": {
            "stability": 0.5,
            "similarity_boost": 0.75,
            "style": 0.5,
            "use_speaker_boost": True
        }
    }
    
    response = requests.post(url, headers=headers, data=json.dumps(data))
    
    if response.status_code == 200:
        return response.content
    else:
        print(f"Error: {response.status_code}")
        print(response.text)
        quit()

def create_avatar_with_did(image_url, audio_url):
    '''Uploads image and audio to D-ID to generate avatar video.'''
    url = "https://api.d-id.com/talks"
    headers = {
        "Authorization": f"Basic {DID_key}",  # Use environment variable for D-ID API Key
        "Content-Type": "application/json"
    }

    data = {
        "source_url": image_url,  # Public URL to an image
        "script": {
            "type": "text",  # Specify the type here
            "audio_url": audio_url  # Public URL to the audio
        }
    }

    response = requests.post(url, headers=headers, json=data)
    
    if response.status_code == 200:
        return response.json().get('video_url')
    else:
        print(f"Error: {response.status_code}")
        print(response.text)
        quit()
import time

import time
import requests
import json




def play_video(video_url):
    '''Plays the avatar video generated by D-ID using the video URL.'''
    pygame.init()
    screen = pygame.display.set_mode((640, 480))
    pygame.display.set_caption("D-ID Avatar")

    clock = pygame.time.Clock()
    video = pygame.movie.Movie(video_url)
    
    video_screen = pygame.Surface(video.get_size())
    video.set_display(video_screen)
    
    video.play()
    
    # Keep running until video ends or user closes window
    while video.get_busy():
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                video.stop()
        screen.blit(video_screen, (0, 0))
        pygame.display.update()
        clock.tick(30)
    
    pygame.quit()

if __name__ == "__main__":
    while True:
        input_text = input("\nQuestion: ")
        print("Input Text: ", input_text)

        ### Generate response from ChatGPT
        #generated_text = chat_gpt(input_text)
        generated_text = "mridul smells bad"
        print("Generated Text: \n\n", generated_text)

        ### Generate speech audio from the response text
        response_content = generate_audio(generated_text)
        audio_file_path = os.path.join(current_dir, "processed_speech.mp3")

        # Save the generated speech
        with open(audio_file_path, 'wb') as f:
            f.write(response_content)
        print(f"Audio saved to {audio_file_path}")

        ### Generate avatar using D-ID API
        image_url = "https://imgur.com/AAhyLEZ.jpg"  ######################################################## Replace with a valid image URL
        audio_url = audio_file_path 
        
        video_url = create_avatar_with_did(image_url, audio_url)
        print(f"Avatar video generated: {video_url}")

        ### Play the avatar video
        play_video(video_url)
